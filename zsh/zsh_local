# Improved ZSH history
export HISTSIZE=256000
export HISTFILE=~/.zsh_history
export SAVEHIST=$HISTSIZE
setopt extended_history
setopt inc_append_history
setopt hist_save_no_dups
setopt hist_ignore_all_dups
setopt share_history
setopt interactivecomments

# Source aliases and functions
for file in ~/.{aliases,functions}; do
    [ -r "$file" ] && [ -f "$file" ] && source "$file";
done;
unset file;

# Pager config
#export PAGER=less
#export LESS=iMRXS

# Python config
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"

eval "$(pyenv init -)"

# Node config
export NVM_DIR="$HOME/.nvm"
  [ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && . "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
  [ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && . "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion


# golang config
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin


# tfswitch
export PATH=$PATH:$HOME/bin

# Editor
export LC_ALL=en_US.UTF-8
EDITOR=vim
export EDITOR

autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc
