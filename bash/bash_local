#
# Virtual enviroment
#
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/workspace
source /usr/local/bin/virtualenvwrapper.sh

#
# Source aliases and functions
for file in ~/.dotfiles/bash/{aliases,functions,kubectl-completion,bash_work}; do
    [ -r "$file" ] && [ -f "$file" ] && source "$file";
done;
unset file;

# History
HISTFILESIZE=1000000
HISTSIZE=1000000
HISTCONTROL=ignoreboth
PROMPT_COMMAND='history -a'
shopt -s histappend
shopt -s cmdhist

. ~/.bash_prompt

[ -z "$TMUX" ] && export TERM=xterm-256color

# Editor
export LC_ALL=en_US.UTF-8
EDITOR=vim
export EDITOR

# Pager config
export PAGER=more
#export LESS=iMRXS

# Kubernetes
source <(kubectl completion bash)
complete -o default -F __start_kubectl k
# use multiple kubeconfig files at the same time and view merged config
KUBECONFIG=~/.kube/config:~/.kube/kubconfig2


# Python config
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"
eval "$(pyenv init -)"

# Node config
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# # eksctl
# fpath=($fpath ~/.zsh/completion)

# golang config
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin



# autoload -U add-zsh-hook
# load-nvmrc() {
#   local node_version="$(nvm version)"
#   local nvmrc_path="$(nvm_find_nvmrc)"

# Go configuration
GOPATH=$HOME/go
export GOPATH
PATH=$PATH:$GOPATH/bin
export PATH
#   if [ -n "$nvmrc_path" ]; then
#     local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

#     if [ "$nvmrc_node_version" = "N/A" ]; then
#       nvm install
#     elif [ "$nvmrc_node_version" != "$node_version" ]; then
#       nvm use
#     fi
#   elif [ "$node_version" != "$(nvm version default)" ]; then
#     echo "Reverting to nvm default version"
#     nvm use default
#   fi
# }
# add-zsh-hook chpwd load-nvmrc
# load-nvmrc
